<?php
    session_start();
function getEmailList($emailRecipientsJSON) {
    // create an array to store all the emails
    $emailList = array();
    // loop through individual emails
    foreach ($emailRecipientsJSON->individualEmails as $email) {
        // check if email is already in list
        if (!in_array($email, $emailList)) {
            array_push($emailList, $email);
        }
    }

    // create an array to store all the email groups
    $emailGroups = array();
    // loop through email groups
    foreach($emailRecipientsJSON->emailGroups as $emailGroup) {
        // check if email group is already in list
        if (!in_array($emailGroup, $emailGroups)) {
            array_push($emailGroups, $emailGroup);
        }
    }
    
    // connect to JSON file
    $path = 'test.json';
    $json = file_get_contents($path);
    $data = json_decode($json, true);
    // loop through email groups and get all emails from data
    foreach ($emailGroups as $emailGroup) {
        foreach ($data[$emailGroup] as $email) {
            // check if email is already in list
            if (!in_array($email, $emailList)) {
                array_push($emailList, $email);
            }
        }
    }
    return $emailList;
}
    use PHPMailer\PHPMailer\PHPMailer;
    use PHPMailer\PHPMailer\Exception;

    require_once '../../vendor/composer/src/Exception.php';
    require_once '../../vendor/composer/src/PHPMailer.php';
    require_once '../../vendor/composer/src/SMTP.php';
    require_once '../../vendor/autoload.php';

    include_once "../includes/functions/security.php";
    DefineSecurity();
    include_once "../db/database.php";
    include_once "../db/dbFunctions.php";

    // Prevent direct access and prevent non-admin's to access
    RestrictAdmin(CheckRole($_SESSION['User_ID']));
    defined('_DEFVAR') or exit(header('Location: ../index.php'));

    // Checking if form button was pressed
    if (isset($_REQUEST['submitEmail'])) { // Processing email
        // Reading email inputs
        $emailSubject = sanitizeData($_REQUEST['emailFormTitle']);
        $emailName = sanitizeData($_REQUEST['emailFormFullName']);
        $emailRecipients = sanitizeData($_REQUEST['emailFormEmail']);
        $emailBody = sanitizeData($_REQUEST['emailFormTextBox']);
        $emailRecipientsJSON = json_decode($_REQUEST['email-recipient-json']); // Note: No sanitization needed because generated by JS
        // get a recipient list and decode it
        $recipientsJSON = '{
            "individualEmails": [
                "test@gmail.com"
            ],
            "emailGroups": [
                "all_clubs",
                "region_b"
            ]
        }';
        $recipientsJSON = json_decode($recipientsJSON);
        // send decoded list to getEmailList function
        $emailList = getEmailList($recipientsJSON);
        

        // Configuring email
        $mail = new PHPMailer(true);
        $mail->isSMTP(); // Remove line to view debug output
        $mail->Mailer = 'smtp';
        $mail->SMTPDebug = 0;
        $mail->SMTPAuth = TRUE;
        $mail->SMTPSecure = "tls";
        $mail->Port = 26;
        $mail->Host = "mail.cricketnovascotia.ca";
        $mail->Username = "testadmin@cricketnovascotia.ca";
        $mail->Password = "CricketNSCA";
        $mail->isHTML(true);

        // Assigning subject
        $mail->Subject = $emailSubject;
        // Assigning name
        if ($emailName != "") {
            try {
                $mail->SetFrom("testadmin@cricketnovascotia.ca", $emailName);
            } catch (Exception $e) {
                header("Location: sendEmail.php?error");  // Error: Email processing exception
            }
        } else {
            try {
                $mail->SetFrom("testadmin@cricketnovascotia.ca", "Test Admin");
            } catch (Exception $e) {
                header("Location: sendEmail.php?error");  // Error: Email processing exception
            }
        }

        // Assigning recipients
        try {
            // loop through all emails and add them to the email
            foreach ($emailList as $email) {
                $mail->addBcc($email, "toAddress");
            }
        } catch (Exception $e) {
            header("Location: sendEmail.php?error"); // Error: Email processing exception
        }

        // Assigning body
        $mail->Body = $emailBody;
        try {
            $mail->MsgHTML($emailBody);
        } catch (Exception $e) {
            header("Location: sendEmail.php?error"); // Error: Email processing exception
        }

        // Sending email
        if($mail->Send()) {
            var_dump($mail);
            header("Location: sendEmail.php?success"); // Success: Email sent
        } else {
            var_dump($mail);
            header("Location: sendEmail.php?error"); // Error: Email sending error
        }
    }
    else {
        header("Location: sendEmail.php?error"); // Error: Form not submitted
    }
?>

<head>
    <meta charset="utf-8">
    <title>Sending Email...</title>
    <link rel="icon" href="../img/favicon.jpeg">
</head>
